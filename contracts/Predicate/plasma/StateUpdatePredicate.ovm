@library
def IsValidTx(tx: Bytes, token: Address, range: Bytes, block_number: BigNumber) :=
  Equal(tx.address, $txAddress)
  and Equal(tx.0, token)
  and HasIntersection(range, tx.1)
  and IsLessThan(block_number, tx.2)

@library
@quantifier("tx.block${b}.range${token},RANGE,${range}")
def Tx(tx: Bytes, token: Address, range: Bytes, b: BigNumber) :=
  IsValidTx(tx, token, range, b)

def stateUpdate(token: Address, range: Bytes, block_number: BigNumber, so: Bytes) :=
  Tx(token, range, block_number).any(tx ->
    so(tx)
  )
